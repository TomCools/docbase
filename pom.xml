<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>docbase</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>20</maven.compiler.source>
        <maven.compiler.target>20</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <asciidoctor.maven.plugin.version>2.2.4</asciidoctor.maven.plugin.version>
        <asciidoctorj.version>2.5.7</asciidoctorj.version>
        <asciidoctorj.pdf.version>2.3.4</asciidoctorj.pdf.version>
        <asciidoctorj.diagram.version>2.2.3</asciidoctorj.diagram.version>
        <jruby.version>9.3.8.0</jruby.version>

        <sourceDirectory>./docs/asciidoc</sourceDirectory>
        <asciidocRootFolder>${sourceDirectory}</asciidocRootFolder>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.asciidoctor</groupId>
                <artifactId>asciidoctor-maven-plugin</artifactId>
                <version>${asciidoctor.maven.plugin.version}</version>
                <dependencies>
                    <!-- Comment this section to use the default jruby artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.jruby</groupId>
                        <artifactId>jruby</artifactId>
                        <version>${jruby.version}</version>
                    </dependency>
                    <!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj</artifactId>
                        <version>${asciidoctorj.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-pdf</artifactId>
                        <version>${asciidoctorj.pdf.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.asciidoctor</groupId>
                        <artifactId>asciidoctorj-diagram</artifactId>
                        <version>${asciidoctorj.diagram.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <sourceDirectory>${sourceDirectory}</sourceDirectory>
                    <requires>
                        <require>asciidoctor-diagram</require>
                    </requires>
                    <!-- If you set baseDir to ${project.basedir}, top-level includes are resolved relative to the project root -->
                    <!--
                    <baseDir>${project.basedir}</baseDir>
                    -->
                    <!-- Attributes common to all output formats -->
                    <attributes>
                        <endpoint-url>http://example.org</endpoint-url>
                        <sourcedir>${project.build.sourceDirectory}</sourcedir>
                        <project-version>${project.version}</project-version>
                    </attributes>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-pdf-doc-custom-theme</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>process-asciidoc</goal>
                        </goals>
                        <configuration>
                            <backend>pdf</backend>
                            <outputDirectory>${project.build.directory}/generated-docs-custom-theme</outputDirectory>
                            <preserveDirectories>true</preserveDirectories>
                            <!-- Use `book` docType to enable title page generation  -->
                            <doctype>book</doctype>
                            <attributes>
                                <!--<pdf-theme>custom</pdf-theme>-->
                                <pdf-themesdir>${project.basedir}/src/docs/theme</pdf-themesdir>
                                <source-highlighter>rouge</source-highlighter>
                                <icons>font</icons>
                                <pagenums/>
                                <toc/>
                                <idprefix/>
                                <idseparator>-</idseparator>
                                <lang>nl</lang>
                            </attributes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.sahli.asciidoc.confluence.publisher</groupId>
                <artifactId>asciidoc-confluence-publisher-maven-plugin</artifactId>
                <version>0.19.0</version>
                <configuration>
                    <asciidocRootFolder>${sourceDirectory}</asciidocRootFolder>
                    <sourceEncoding>UTF-8</sourceEncoding> <!-- default -->
                    <rootConfluenceUrl>http://localhost:8090</rootConfluenceUrl>
                    <skipSslVerification>false</skipSslVerification>
                    <maxRequestsPerSecond>10</maxRequestsPerSecond>
                    <spaceKey>SPACE</spaceKey>
                    <ancestorId>327706</ancestorId>
                    <username>username</username> <!-- or read from property -->
                    <password>password</password> <!-- or read from property -->
                    <serverId>myServerId</serverId> <!-- requires server definition in settings.xml -->
                    <pageTitlePrefix xml:space="preserve">Doc :: </pageTitlePrefix>
                    <pageTitleSuffix xml:space="preserve"> [${project.version}]</pageTitleSuffix>
                    <versionMessage>Version ${project.version}</versionMessage>
                    <notifyWatchers>false</notifyWatchers>
                    <attributes>
                        <version>${project.version}</version>
                        <someOtherKey>value</someOtherKey>
                    </attributes>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
